// you can write to stdout for debugging purposes, e.g.
// printf("this is a debug message\n");
void zeros(int*,int);
int max(int, int);
void forward_steps(int*, int*, int);
void backward_steps(int*, int*, int);

int solution(int A[], int N) {
    // Implement your solution here
    A[0]=0;
    A[N-1]=0;
    int F[N], B[N], maxVal=0, temp;
    zeros(F,N);
    zeros(B,N);
    forward_steps(A,F,N);
    backward_steps(A,B,N);
    for(int i=1;i<N-2;i++){
        temp=B[i-1]+F[i+1];
        maxVal=max(temp,maxVal);
    }
    return maxVal;
    
}

void zeros(int A[], int N){
    for(int i=0;i<N;i++){
        A[i]=0;
    }
    return;
}
int max(int a, int b){
    if(a>b){
        return a;
    }
    else{
        return b;
    }
}
void forward_steps(int A[], int F[], int N){
    int temp;
    F[N-1]=max(A[N-1],0);
    for(int i=N-2;i>-1;i--){
        temp=max(A[i],0);
        F[i]=max(A[i]+F[i+1],temp);
    }
    return;
}
void backward_steps(int A[], int B[], int N){
    int temp;
    B[0]=max(A[0],0);
    for(int i=1;i<N;i++){
        temp=max(A[i],0);
        B[i]=max(A[i]+B[i-1],temp);
    }
    return;
}
